{"ast":null,"code":"import _defineProperty from \"/home/saeed/Desktop/fullstackopen-submissions/part2/altering_data_in_server/phonebook-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/saeed/Desktop/fullstackopen-submissions/part2/altering_data_in_server/phonebook-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/saeed/Desktop/fullstackopen-submissions/part2/altering_data_in_server/phonebook-app/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport noteService from './services/services';\n\nconst Filter = ({\n  setSearch,\n  search\n}) => {\n  const handleSearch = ev => {\n    search = ev.target.value.trim().toLowerCase();\n    setSearch(search);\n  };\n\n  return React.createElement(\"input\", {\n    onChange: handleSearch,\n    value: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n};\n\nconst PersonForm = ({\n  notes,\n  setNote\n}) => {\n  const _useState = useState({\n    name: \"\",\n    number: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        newName = _useState2[0],\n        setNewName = _useState2[1];\n\n  const handleForm = ev => {\n    ev.preventDefault();\n\n    if (notes.some(person => person.name === newName.name)) {\n      alert(\"\".concat(newName.name, \" is already added to phonebook\"));\n    } else {\n      noteService.create(newName).then(notes => {\n        notes = notes.concat(newName);\n        setNote(notes);\n      });\n      let emptyName = {\n        name: \"\",\n        number: \"\"\n      };\n      setNewName(emptyName);\n    }\n  };\n\n  const handleInputName = ev => {\n    let updatedName = {\n      name: ev.target.value\n    };\n    setNewName(updatedName);\n  };\n\n  const handleInputNumber = ev => {\n    let updatedName = _objectSpread({}, newName, {\n      number: ev.target.value,\n      id: Math.floor(Math.random() * 1000 + 1)\n    });\n\n    setNewName(updatedName);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"name:\", \" \", React.createElement(\"input\", {\n    onChange: handleInputName,\n    value: newName.name,\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), \"number:\", \" \", React.createElement(\"input\", {\n    onChange: handleInputNumber,\n    value: newName.number,\n    name: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"add\")));\n};\n\nconst Persons = ({\n  notes,\n  search\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, search.length > 0 ? notes.filter(person => {\n    return person.name.toLowerCase().match(search);\n  }).map((v, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, v.name, \" \", v.number);\n  }) : notes.map((v, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, v.name, \" \", v.number);\n  }));\n};\n\nconst App = () => {\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        notes = _useState4[0],\n        setNote = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        input = _useState6[0],\n        setInput = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        search = _useState8[0],\n        setSearch = _useState8[1];\n\n  const hook = () => {\n    noteService.getAll().then(response => {\n      setNote(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"phonebook\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"filter shown with \", React.createElement(Filter, {\n    search: search,\n    setSearch: setSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"add a new\"), React.createElement(PersonForm, {\n    notes: notes,\n    setNote: setNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Numbers\"), React.createElement(Persons, {\n    notes: notes,\n    search: search,\n    setNote: setNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/saeed/Desktop/fullstackopen-submissions/part2/altering_data_in_server/phonebook-app/src/App.js"],"names":["React","useState","useEffect","noteService","Filter","setSearch","search","handleSearch","ev","target","value","trim","toLowerCase","PersonForm","notes","setNote","name","number","newName","setNewName","handleForm","preventDefault","some","person","alert","create","then","concat","emptyName","handleInputName","updatedName","handleInputNumber","id","Math","floor","random","Persons","length","filter","match","map","v","i","App","input","setInput","hook","getAll","response","data"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport noteService from './services/services';\n\nconst Filter = ({setSearch,search}) => {\n  const handleSearch = ev => {\n    search = ev.target.value.trim().toLowerCase();\n    setSearch(search)\n};\n  return (\n    <input onChange={handleSearch}  value={search} />\n  )\n}\n\nconst PersonForm = ({notes, setNote}) => {\n  const [newName, setNewName] = useState({name:\"\",number:\"\"});\n  const handleForm = ev => {\n    ev.preventDefault();\n\n    if (notes.some(person => person.name === newName.name)) {\n      alert(`${newName.name} is already added to phonebook`);\n    } else {\n      noteService.create(newName).then((notes) => {\n        notes = notes.concat(newName);\n        setNote(notes);\n      })\n      let emptyName = {\n        name: \"\",\n        number: \"\"\n      };\n      setNewName(emptyName);\n    }\n  };\n\n\n\n  const handleInputName = ev => {\n    let updatedName = {\n      name: ev.target.value\n    };\n    setNewName(updatedName);\n  };\n\n  const handleInputNumber = ev => {\n    let updatedName = {\n      ...newName,\n      number: ev.target.value,\n      id : Math.floor((Math.random() * 1000) + 1)\n    };\n    setNewName(updatedName);\n  };\n  return (\n    <form onSubmit={handleForm}>\n    <div>\n      name:{\" \"}\n      <input onChange={handleInputName} value={newName.name} name=\"name\" />\n      <br />\n      number:{\" \"}\n      <input\n        onChange={handleInputNumber}\n        value={newName.number}\n        name=\"number\"\n      />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nconst Persons = ({notes, search}) => {\n \n  return (\n    <div>{search.length > 0 ? \n      notes.filter(person => {return person.name.toLowerCase().match(search)}).map((v, i) => {\n    return <div key={i}>{v.name} {v.number}</div> }): notes.map((v, i) => {\n      return <div key={i}>{v.name} {v.number}</div> })\n    }</div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNote] = useState([]);\n  const [input, setInput] = useState([]);\n\n  const [search, setSearch] = useState(\"\");\n\n  const hook = () => {\n      noteService.getAll().then(response => {\n        setNote(response.data)\n      })\n  }\n\n  useEffect(hook,[])\n\n  return (\n    <div>\n      <h2>phonebook</h2>\n      <div>\n        filter shown with <Filter search={search} setSearch={setSearch}  />\n      </div>\n      <h2>add a new</h2>\n      <PersonForm notes={notes} setNote={setNote} />\n      <h2>Numbers</h2>\n      <Persons notes={notes} search={search} setNote={setNote} />\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}