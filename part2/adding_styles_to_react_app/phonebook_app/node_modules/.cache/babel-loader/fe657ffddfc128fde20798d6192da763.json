{"ast":null,"code":"import _defineProperty from \"/home/saeed/Desktop/fullstackopen-submissions/part2/adding_styles_to_react_app/phonebook_app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/saeed/Desktop/fullstackopen-submissions/part2/adding_styles_to_react_app/phonebook_app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/saeed/Desktop/fullstackopen-submissions/part2/adding_styles_to_react_app/phonebook_app/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport noteService from './services/services';\n\nconst Notification = ({\n  errorMessage\n}) => {\n  if (errorMessage === null) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, errorMessage);\n};\n\nconst Filter = ({\n  setSearch,\n  search\n}) => {\n  const handleSearch = ev => {\n    search = ev.target.value.trim().toLowerCase();\n    setSearch(search);\n  };\n\n  return React.createElement(\"input\", {\n    onChange: handleSearch,\n    value: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n};\n\nconst PersonForm = ({\n  notes,\n  setNote,\n  setErrorMessage\n}) => {\n  const _useState = useState({\n    name: \"\",\n    number: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        newName = _useState2[0],\n        setNewName = _useState2[1];\n\n  const handleForm = ev => {\n    console.log(ev);\n    ev.preventDefault();\n    let id;\n    let updated_notes;\n\n    if (notes.some(person => person.name === newName.name)) {\n      if (window.confirm(\"\".concat(newName.name, \" is already added to phonebook. Replace the old number with a new one?\"))) {\n        updated_notes = notes.filter(note => {\n          if (note.name === newName.name) {\n            note.number = newName.number;\n            id = note.id;\n          }\n\n          return note;\n        });\n        noteService.update(id, newName);\n        setNote(updated_notes);\n        let emptyName = {\n          name: \"\",\n          number: \"\"\n        };\n        setNewName(emptyName);\n      }\n    } else {\n      noteService.create(newName);\n      notes = notes.concat(newName);\n      setNote(notes);\n      setErrorMessage(\"Added \".concat(newName.name, \" successfully to the list\"));\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      let emptyName = {\n        name: \"\",\n        number: \"\"\n      };\n      setNewName(emptyName);\n    }\n  };\n\n  const handleInputName = ev => {\n    let updatedName = {\n      name: ev.target.value\n    };\n    setNewName(updatedName);\n  };\n\n  const handleInputNumber = ev => {\n    let updatedName = _objectSpread({}, newName, {\n      number: ev.target.value,\n      id: Math.floor(Math.random() * 1000 + 1)\n    });\n\n    setNewName(updatedName);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"name:\", \" \", React.createElement(\"input\", {\n    onChange: handleInputName,\n    value: newName.name,\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), \"number:\", \" \", React.createElement(\"input\", {\n    onChange: handleInputNumber,\n    value: newName.number,\n    name: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"add\")));\n};\n\nconst Persons = ({\n  notes,\n  search,\n  setNote\n}) => {\n  const deleteNote = id => {\n    if (window.confirm('Are you sure to delete this note?')) {\n      noteService.deleteNote(id);\n      notes = notes.filter(note => note.id !== id);\n      setNote(notes);\n    } else {\n      return null;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, search.length > 0 ? notes.filter(person => {\n    return person.name.toLowerCase().match(search);\n  }).map((v, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, v.name, \" \", v.number, React.createElement(\"button\", {\n      onClick: () => deleteNote(v.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"delete\"));\n  }) : notes.map((v, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, v.name, \" \", v.number, React.createElement(\"button\", {\n      onClick: () => deleteNote(v.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"delete\"));\n  }));\n};\n\nconst App = () => {\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        notes = _useState4[0],\n        setNote = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        input = _useState6[0],\n        setInput = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        successMessage = _useState8[0],\n        setSuccessMessage = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        search = _useState10[0],\n        setSearch = _useState10[1];\n\n  const hook = () => {\n    noteService.getAll().then(response => {\n      setNote(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    successMessage: successMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"phonebook\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"filter shown with \", React.createElement(Filter, {\n    search: search,\n    setSearch: setSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"add a new\"), React.createElement(PersonForm, {\n    notes: notes,\n    setNote: setNote,\n    setSuccessMessage: setSuccessMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Numbers\"), React.createElement(Persons, {\n    notes: notes,\n    search: search,\n    setNote: setNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/saeed/Desktop/fullstackopen-submissions/part2/adding_styles_to_react_app/phonebook_app/src/App.js"],"names":["React","useState","useEffect","noteService","Notification","errorMessage","Filter","setSearch","search","handleSearch","ev","target","value","trim","toLowerCase","PersonForm","notes","setNote","setErrorMessage","name","number","newName","setNewName","handleForm","console","log","preventDefault","id","updated_notes","some","person","window","confirm","filter","note","update","emptyName","create","concat","setTimeout","handleInputName","updatedName","handleInputNumber","Math","floor","random","Persons","deleteNote","length","match","map","v","i","App","input","setInput","successMessage","setSuccessMessage","hook","getAll","then","response","data"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport noteService from './services/services';\n\nconst Notification = ({ errorMessage }) => {\n  if (errorMessage===null) {\n    return null;\n  }\n  return (\n<div className=\"error\">{errorMessage}</div>\n  )\n}\n\nconst Filter = ({setSearch,search}) => {\n  const handleSearch = ev => {\n    search = ev.target.value.trim().toLowerCase();\n    setSearch(search)\n};\n  return (\n    <input onChange={handleSearch}  value={search} />\n  )\n}\n\nconst PersonForm = ({notes, setNote, setErrorMessage}) => {\n  const [newName, setNewName] = useState({name:\"\",number:\"\"});\n  const handleForm = ev => {\n    console.log(ev)\n    ev.preventDefault();\n    let id;\n    let updated_notes;\n    if (notes.some(person => person.name === newName.name)) {\n      if(window.confirm(`${newName.name} is already added to phonebook. Replace the old number with a new one?`)) {\n        updated_notes = notes.filter((note) => { if (note.name === newName.name) {\n          note.number = newName.number;\n          id = note.id\n        }\n        return note;\n      })\n        noteService.update(id, newName)\n        setNote(updated_notes)\n        let emptyName = {\n          name: \"\",\n          number: \"\"\n        };\n        setNewName(emptyName);\n      }\n    } else {\n      noteService.create(newName)\n        notes = notes.concat(newName);\n        setNote(notes);\n        setErrorMessage(`Added ${newName.name} successfully to the list`)\n        setTimeout(() => {setErrorMessage(null)},5000)\n    \n      let emptyName = {\n        name: \"\",\n        number: \"\"\n      };\n      setNewName(emptyName);\n    }\n  };\n\n\n\n  const handleInputName = ev => {\n    let updatedName = {\n      name: ev.target.value\n    };\n    setNewName(updatedName);\n  };\n\n  const handleInputNumber = ev => {\n    let updatedName = {\n      ...newName,\n      number: ev.target.value,\n      id : Math.floor((Math.random() * 1000) + 1)\n    };\n    setNewName(updatedName);\n  };\n  return (\n    <form onSubmit={handleForm}>\n    <div>\n      name:{\" \"}\n      <input onChange={handleInputName} value={newName.name} name=\"name\" />\n      <br />\n      number:{\" \"}\n      <input\n        onChange={handleInputNumber}\n        value={newName.number}\n        name=\"number\"\n      />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nconst Persons = ({notes, search, setNote}) => {\n  const deleteNote = (id) => {\n    if (window.confirm('Are you sure to delete this note?')) {\n      noteService.deleteNote(id);\n      notes = notes.filter((note) => note.id !== id)\n      setNote(notes);\n    }\n    else {\n      return null\n    }\n  }\n  return (\n    <div>{search.length > 0 ? \n      notes.filter(person => {return person.name.toLowerCase().match(search)}).map((v, i) => {\n    return <div key={i}>{v.name} {v.number}<button onClick={() => deleteNote(v.id)}>delete</button></div> }): notes.map((v, i) => {\n      return <div key={i}>{v.name} {v.number}<button onClick={() => deleteNote(v.id)}>delete</button></div> })\n    }</div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNote] = useState([]);\n  const [input, setInput] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [search, setSearch] = useState(\"\");\n\n  const hook = () => {\n      noteService.getAll().then(response => {\n        setNote(response.data)\n      })\n  }\n\n  useEffect(hook,[])\n\n  return (\n    <div>\n      <Notification successMessage={successMessage}/>\n      <h2>phonebook</h2>\n      <div>\n        filter shown with <Filter search={search} setSearch={setSearch}  />\n      </div>\n      <h2>add a new</h2>\n      <PersonForm notes={notes} setNote={setNote} setSuccessMessage={setSuccessMessage} />\n      <h2>Numbers</h2>\n      <Persons notes={notes} search={search} setNote={setNote} />\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}