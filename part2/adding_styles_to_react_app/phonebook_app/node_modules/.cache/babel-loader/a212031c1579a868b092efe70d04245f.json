{"ast":null,"code":"import _defineProperty from \"/home/saeed/Desktop/fullstackopen-submissions/part2/adding_styles_to_react_app/phonebook_app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/saeed/Desktop/fullstackopen-submissions/part2/adding_styles_to_react_app/phonebook_app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/saeed/Desktop/fullstackopen-submissions/part2/adding_styles_to_react_app/phonebook_app/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport personService from './services/services';\n\nconst Notification = ({\n  successMessage,\n  errorMessage\n}) => {\n  if (successMessage === null && errorMessage === null) {\n    return null;\n  } else if (errorMessage === null && successMessage) {\n    return React.createElement(\"div\", {\n      className: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, successMessage);\n  } else if (errorMessage && successMessage === null) {\n    return React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, errorMessage);\n  } else {\n    return null;\n  } //   return (\n  // <div className={errorMessage ? \"error\" : \"success\"}>{successMessage}{errorMessage}</div>\n  //   )\n\n};\n\nconst Filter = ({\n  setSearch,\n  search\n}) => {\n  const handleSearch = ev => {\n    search = ev.target.value.trim().toLowerCase();\n    setSearch(search);\n  };\n\n  return React.createElement(\"input\", {\n    onChange: handleSearch,\n    value: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n};\n\nconst PersonForm = ({\n  persons,\n  setperson,\n  setSuccessMessage\n}) => {\n  const _useState = useState({\n    name: \"\",\n    number: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        newName = _useState2[0],\n        setNewName = _useState2[1];\n\n  const handleForm = ev => {\n    console.log(ev);\n    ev.preventDefault();\n    let id;\n    let updated_persons;\n\n    if (persons.some(person => person.name === newName.name)) {\n      if (window.confirm(\"\".concat(newName.name, \" is already added to phonebook. Replace the old number with a new one?\"))) {\n        updated_persons = persons.filter(person => {\n          if (person.name === newName.name) {\n            person.number = newName.number;\n            id = person.id;\n          }\n\n          return person;\n        });\n        personService.update(id, newName);\n        setperson(updated_persons);\n        setSuccessMessage(\"Number of \".concat(newName.name, \" has been updated\"));\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000);\n        let emptyName = {\n          name: \"\",\n          number: \"\"\n        };\n        setNewName(emptyName);\n      }\n    } else {\n      personService.create(newName);\n      persons = persons.concat(newName);\n      setperson(persons);\n      setSuccessMessage(\"Added \".concat(newName.name, \" successfully to the list\"));\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n      let emptyName = {\n        name: \"\",\n        number: \"\"\n      };\n      setNewName(emptyName);\n    }\n  };\n\n  const handleInputName = ev => {\n    let updatedName = {\n      name: ev.target.value\n    };\n    setNewName(updatedName);\n  };\n\n  const handleInputNumber = ev => {\n    let updatedName = _objectSpread({}, newName, {\n      number: ev.target.value,\n      id: Math.floor(Math.random() * 1000 + 1)\n    });\n\n    setNewName(updatedName);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"name:\", \" \", React.createElement(\"input\", {\n    onChange: handleInputName,\n    value: newName.name,\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), \"number:\", \" \", React.createElement(\"input\", {\n    onChange: handleInputNumber,\n    value: newName.number,\n    name: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"add\")));\n};\n\nconst Persons = ({\n  persons,\n  search,\n  setperson,\n  setErrorMessage\n}) => {\n  const deleteperson = (id, name) => {\n    if (window.confirm('Are you sure to delete this person?')) {\n      personService.deleteperson(id).then(() => {\n        persons = persons.filter(person => person.id !== id);\n        setperson(persons);\n        setErrorMessage(\"\".concat(name, \" has been deleted from server\"));\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      }).catch(() => {\n        setErrorMessage(\"Information of \".concat(name, \" has already been deleted from server\"));\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n    } else {\n      return null;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, search.length > 0 ? persons.filter(person => {\n    return person.name.toLowerCase().match(search);\n  }).map((v, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, v.name, \" \", v.number, React.createElement(\"button\", {\n      onClick: () => deleteperson(v.id, v.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"delete\"));\n  }) : persons.map((v, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, v.name, \" \", v.number, React.createElement(\"button\", {\n      onClick: () => deleteperson(v.id, v.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"delete\"));\n  }));\n};\n\nconst App = () => {\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        persons = _useState4[0],\n        setperson = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        input = _useState6[0],\n        setInput = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        successMessage = _useState8[0],\n        setSuccessMessage = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        errorMessage = _useState10[0],\n        setErrorMessage = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        search = _useState12[0],\n        setSearch = _useState12[1];\n\n  const hook = () => {\n    personService.getAll().then(response => {\n      setperson(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    successMessage: successMessage,\n    errorMessage: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"phonebook\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"filter shown with \", React.createElement(Filter, {\n    search: search,\n    setSearch: setSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"add a new\"), React.createElement(PersonForm, {\n    persons: persons,\n    setperson: setperson,\n    setSuccessMessage: setSuccessMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Numbers\"), React.createElement(Persons, {\n    persons: persons,\n    search: search,\n    setperson: setperson,\n    setErrorMessage: setErrorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/saeed/Desktop/fullstackopen-submissions/part2/adding_styles_to_react_app/phonebook_app/src/App.js"],"names":["React","useState","useEffect","personService","Notification","successMessage","errorMessage","Filter","setSearch","search","handleSearch","ev","target","value","trim","toLowerCase","PersonForm","persons","setperson","setSuccessMessage","name","number","newName","setNewName","handleForm","console","log","preventDefault","id","updated_persons","some","person","window","confirm","filter","update","setTimeout","emptyName","create","concat","handleInputName","updatedName","handleInputNumber","Math","floor","random","Persons","setErrorMessage","deleteperson","then","catch","length","match","map","v","i","App","input","setInput","hook","getAll","response","data"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport personService from './services/services';\n\nconst Notification = ({ successMessage,errorMessage }) => {\n  if (successMessage===null && errorMessage===null) {\n    return null\n  }\n  else if(errorMessage===null && successMessage) {\n    return <div className=\"success\">{successMessage}</div>;\n  }\n  else if(errorMessage && successMessage===null) {\n    return <div className=\"error\">{errorMessage}</div>\n  }\n  else {\n    return null\n  }\n//   return (\n// <div className={errorMessage ? \"error\" : \"success\"}>{successMessage}{errorMessage}</div>\n//   )\n}\n\nconst Filter = ({setSearch,search}) => {\n  const handleSearch = ev => {\n    search = ev.target.value.trim().toLowerCase();\n    setSearch(search)\n};\n  return (\n    <input onChange={handleSearch}  value={search} />\n  )\n}\n\nconst PersonForm = ({persons, setperson, setSuccessMessage}) => {\n  const [newName, setNewName] = useState({name:\"\",number:\"\"});\n  const handleForm = ev => {\n    console.log(ev)\n    ev.preventDefault();\n    let id;\n    let updated_persons;\n    if (persons.some(person => person.name === newName.name)) {\n      if(window.confirm(`${newName.name} is already added to phonebook. Replace the old number with a new one?`)) {\n        updated_persons = persons.filter((person) => { if (person.name === newName.name) {\n          person.number = newName.number;\n          id = person.id\n        }\n        return person;\n      })\n        personService.update(id, newName)\n        setperson(updated_persons)\n        setSuccessMessage(`Number of ${newName.name} has been updated`)\n        setTimeout(()=>{setSuccessMessage(null)},5000)\n        let emptyName = {\n          name: \"\",\n          number: \"\"\n        };\n        setNewName(emptyName);\n      }\n    } else {\n      personService.create(newName)\n        persons = persons.concat(newName);\n        setperson(persons);\n        setSuccessMessage(`Added ${newName.name} successfully to the list`)\n        setTimeout(() => {setSuccessMessage(null)},5000)\n    \n      let emptyName = {\n        name: \"\",\n        number: \"\"\n      };\n      setNewName(emptyName);\n    }\n  };\n\n\n\n  const handleInputName = ev => {\n    let updatedName = {\n      name: ev.target.value\n    };\n    setNewName(updatedName);\n  };\n\n  const handleInputNumber = ev => {\n    let updatedName = {\n      ...newName,\n      number: ev.target.value,\n      id : Math.floor((Math.random() * 1000) + 1)\n    };\n    setNewName(updatedName);\n  };\n  return (\n    <form onSubmit={handleForm}>\n    <div>\n      name:{\" \"}\n      <input onChange={handleInputName} value={newName.name} name=\"name\" />\n      <br />\n      number:{\" \"}\n      <input\n        onChange={handleInputNumber}\n        value={newName.number}\n        name=\"number\"\n      />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nconst Persons = ({persons, search, setperson,setErrorMessage}) => {\n  const deleteperson = (id,name) => {\n    if (window.confirm('Are you sure to delete this person?')) {\n      personService.deleteperson(id).then(() =>{\n        persons = persons.filter((person) => person.id !== id)\n        setperson(persons);\n        setErrorMessage(`${name} has been deleted from server`)\n        setTimeout(()=>{setErrorMessage(null)},5000)\n      })\n      .catch(()=>{\n        setErrorMessage(`Information of ${name} has already been deleted from server`)\n        setTimeout(()=>{setErrorMessage(null)},5000)\n      })\n    }\n    else {\n      return null\n    }\n  }\n  return (\n    <div>{search.length > 0 ? \n      persons.filter(person => {return person.name.toLowerCase().match(search)}).map((v, i) => {\n    return <div key={i}>{v.name} {v.number}<button onClick={() => deleteperson(v.id,v.name)}>delete</button></div> }): persons.map((v, i) => {\n      return <div key={i}>{v.name} {v.number}<button onClick={() => deleteperson(v.id,v.name)}>delete</button></div> })\n    }</div>\n  )\n}\n\nconst App = () => {\n  const [persons, setperson] = useState([]);\n  const [input, setInput] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [search, setSearch] = useState(\"\");\n\n  const hook = () => {\n      personService.getAll().then(response => {\n        setperson(response.data)\n      })\n  }\n\n  useEffect(hook,[])\n\n  return (\n    <div>\n      <Notification successMessage={successMessage} errorMessage={errorMessage}/>\n      <h2>phonebook</h2>\n      <div>\n        filter shown with <Filter search={search} setSearch={setSearch}  />\n      </div>\n      <h2>add a new</h2>\n      <PersonForm persons={persons} setperson={setperson} setSuccessMessage={setSuccessMessage} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} search={search} setperson={setperson} setErrorMessage={setErrorMessage}/>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}